# Generated by Django 2.2.6 on 2019-10-28 07:19

import cloudinary.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import paper_uploads.cloudinary.container
import paper_uploads.models.collection
import paper_uploads.models.containers.base


class Migration(migrations.Migration):

    dependencies = [
        ('paper_uploads', '0012_auto_20191025_1440'),
        ('paper_uploads_cloudinary', '0004_auto_20191025_0526'),
    ]

    operations = [
        migrations.CreateModel(
            name='CloudinaryFileItem',
            fields=[
                ('collectionitembase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='paper_uploads.CollectionItemBase')),
                ('name', models.CharField(editable=False, max_length=255, verbose_name='file name')),
                ('extension', models.CharField(editable=False, help_text='Lowercase, without leading dot', max_length=32, verbose_name='file extension')),
                ('size', models.PositiveIntegerField(default=0, editable=False, verbose_name='file size')),
                ('hash', models.CharField(editable=False, help_text='SHA-1 hash of the file contents', max_length=40, verbose_name='file hash')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='uploaded at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('preview', models.CharField(blank=True, editable=False, max_length=255, verbose_name='preview URL')),
                ('file', cloudinary.models.CloudinaryField(max_length=255, verbose_name='file')),
                ('display_name', models.CharField(blank=True, max_length=255, verbose_name='display name')),
            ],
            options={
                'verbose_name': 'file',
                'verbose_name_plural': 'files',
                'abstract': False,
                'default_permissions': (),
            },
            bases=(paper_uploads.models.collection.CollectionFileItemMixin, paper_uploads.cloudinary.container.CloudinaryContainerMixin, 'paper_uploads.collectionitembase', paper_uploads.models.containers.base.ContainerMixinBase, models.Model),
        ),
        migrations.CreateModel(
            name='CloudinaryImageItem',
            fields=[
                ('collectionitembase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='paper_uploads.CollectionItemBase')),
                ('file', models.CharField(max_length=255, verbose_name='file')),
                ('name', models.CharField(editable=False, max_length=255, verbose_name='file name')),
                ('extension', models.CharField(editable=False, help_text='Lowercase, without leading dot', max_length=32, verbose_name='file extension')),
                ('size', models.PositiveIntegerField(default=0, editable=False, verbose_name='file size')),
                ('hash', models.CharField(editable=False, help_text='SHA-1 hash of the file contents', max_length=40, verbose_name='file hash')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='uploaded at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('alt', models.CharField(blank=True, help_text='This text will be used by screen readers, search engines, or when the image cannot be loaded', max_length=255, verbose_name='alternate text')),
                ('title', models.CharField(blank=True, help_text='The title is being used as a tooltip when the user hovers the mouse over the image', max_length=255, verbose_name='title')),
                ('width', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='width')),
                ('height', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='height')),
                ('cropregion', models.CharField(blank=True, editable=False, max_length=24, verbose_name='crop region')),
            ],
            options={
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(paper_uploads.models.collection.CollectionFileItemMixin, paper_uploads.cloudinary.container.CloudinaryContainerMixin, 'paper_uploads.collectionitembase', paper_uploads.models.containers.base.ContainerMixinBase, models.Model),
        ),
        migrations.CreateModel(
            name='CloudinaryImageCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
    ]
