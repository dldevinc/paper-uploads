# Generated by Django 4.0.2 on 2022-02-09 05:42

import cloudinary.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import paper_uploads.cloudinary.models.fields.file
import paper_uploads.cloudinary.models.fields.image
import paper_uploads.cloudinary.models.fields.media
import paper_uploads.cloudinary.models.mixins
import paper_uploads.models.fields.base
import paper_uploads.models.fields.collection
import paper_uploads.models.fields.file
import paper_uploads.models.fields.image
import paper_uploads.models.mixins
import paper_uploads.validators


class Migration(migrations.Migration):

    replaces = [('app', '0001_initial'), ('app', '0002_auto_20200915_0708'), ('app', '0003_filefieldobject_name'), ('app', '0004_imagefieldobject_name'), ('app', '0005_auto_20210407_0627'), ('app', '0006_auto_20210708_1731'), ('app', '0007_cloudinaryimageexample_image_public'), ('app', '0008_auto_20210906_1505'), ('app', '0009_auto_20210907_0530'), ('app', '0010_isolatedfilecollection_name'), ('app', '0011_auto_20210909_0755'), ('app', '0012_collectionfieldobject_name'), ('app', '0013_auto_20210910_1112'), ('app', '0014_auto_20210910_1221'), ('app', '0015_auto_20211103_1255'), ('app', '0016_customimageitem'), ('app', '0017_auto_20211108_1150'), ('app', '0018_auto_20211108_1309'), ('app', '0019_auto_20211116_0812'), ('app', '0020_auto_20211116_1144'), ('app', '0021_auto_20211116_1209'), ('app', '0022_auto_20211116_1210'), ('app', '0023_auto_20211207_1439'), ('app', '0024_auto_20211208_1031'), ('app', '0025_delete_completecollection'), ('app', '0026_delete_customgallery'), ('app', '0027_auto_20211208_1228'), ('app', '0028_alter_cloudinaryfileexample_file_size_and_more')]

    initial = True

    dependencies = [
        ('paper_uploads', '0003_auto_20210906_1505'),
        ('paper_uploads', '0001_initial'),
        ('paper_uploads_cloudinary', '0004_auto_20211106_1004'),
        ('paper_uploads_cloudinary', '0005_auto_20211116_0840'),
        ('paper_uploads', '0004_auto_20211106_1004'),
        ('paper_uploads_cloudinary', '0002_auto_20210407_0627'),
        ('paper_uploads_cloudinary', '0003_delete_cloudinarycollection'),
        ('paper_uploads', '0006_auto_20211116_0748'),
        ('paper_uploads_cloudinary', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DummyFileFieldResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('basename', models.CharField(editable=False, help_text='Human-readable resource name', max_length=255, verbose_name='basename')),
                ('extension', models.CharField(editable=False, help_text='Lowercase, without leading dot', max_length=32, verbose_name='extension')),
                ('size', models.PositiveIntegerField(default=0, editable=False, verbose_name='size')),
                ('checksum', models.CharField(editable=False, max_length=64, verbose_name='checksum')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='uploaded at')),
                ('file', paper_uploads.models.fields.base.DynamicStorageFileField(verbose_name='file')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
            bases=(paper_uploads.models.mixins.FileFieldProxyMixin, paper_uploads.models.mixins.FileProxyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DummyFileResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('basename', models.CharField(editable=False, help_text='Human-readable resource name', max_length=255, verbose_name='basename')),
                ('extension', models.CharField(editable=False, help_text='Lowercase, without leading dot', max_length=32, verbose_name='extension')),
                ('size', models.PositiveIntegerField(default=0, editable=False, verbose_name='size')),
                ('checksum', models.CharField(editable=False, max_length=64, verbose_name='checksum')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='uploaded at')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
            bases=(paper_uploads.models.mixins.FileProxyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DummyResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='IsolatedFileCollection',
            fields=[
                ('name', models.CharField(blank=True, max_length=128, verbose_name='name')),
            ],
            options={
                'proxy': False,
                'default_permissions': (),
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CloudinaryCompleteCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'default_permissions': (),
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CloudinaryFileCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'default_permissions': (),
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CloudinaryMediaCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'default_permissions': (),
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CloudinaryPhotoCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'default_permissions': (),
            },
            bases=('paper_uploads_cloudinary.cloudinaryimagecollection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CompleteCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'default_permissions': (),
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='FileCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'default_permissions': (),
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PhotoCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'default_permissions': (),
            },
            bases=('paper_uploads.imagecollection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ImageExample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', paper_uploads.models.fields.image.ImageField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads.uploadedimage', upload_to='', verbose_name='image')),
            ],
        ),
        migrations.CreateModel(
            name='FileExample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', paper_uploads.models.fields.file.FileField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads.uploadedfile', upload_to='', verbose_name='file')),
            ],
        ),
        migrations.CreateModel(
            name='CloudinaryMediaExample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', paper_uploads.cloudinary.models.fields.media.CloudinaryMediaField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads_cloudinary.cloudinarymedia', upload_to='', verbose_name='media')),
            ],
            options={
                'verbose_name': 'Cloudinary Media',
                'verbose_name_plural': 'Cloudinary Media',
            },
        ),
        migrations.CreateModel(
            name='CloudinaryCollectionFieldObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_collection', paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='app.cloudinaryfilecollection', upload_to='')),
                ('full_collection', paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='app.cloudinarycompletecollection', upload_to='')),
                ('image_collection', paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='app.cloudinaryphotocollection', upload_to='')),
                ('media_collection', paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='app.cloudinarymediacollection', upload_to='')),
            ],
            options={
                'verbose_name': 'Cloudinary Collection',
                'verbose_name_plural': 'Cloudinary Collections',
            },
        ),
        migrations.CreateModel(
            name='ChildFileCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'default_permissions': (),
            },
            bases=('app.isolatedfilecollection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DummyImageFieldResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('basename', models.CharField(editable=False, help_text='Human-readable resource name', max_length=255, verbose_name='basename')),
                ('extension', models.CharField(editable=False, help_text='Lowercase, without leading dot', max_length=32, verbose_name='extension')),
                ('size', models.PositiveIntegerField(default=0, editable=False, verbose_name='size')),
                ('checksum', models.CharField(editable=False, max_length=64, verbose_name='checksum')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='uploaded at')),
                ('title', models.CharField(blank=True, help_text='The title is being used as a tooltip when the user hovers the mouse over the image', max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='This text will be used by screen readers, search engines, or when the image cannot be loaded', verbose_name='description')),
                ('width', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='width')),
                ('height', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='height')),
                ('cropregion', models.CharField(blank=True, editable=False, max_length=24, verbose_name='crop region')),
                ('image', paper_uploads.models.fields.base.DynamicStorageFileField(verbose_name='file')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
            bases=(paper_uploads.models.mixins.FileFieldProxyMixin, paper_uploads.models.mixins.FileProxyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DummyVersatileImageResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('basename', models.CharField(editable=False, help_text='Human-readable resource name', max_length=255, verbose_name='basename')),
                ('extension', models.CharField(editable=False, help_text='Lowercase, without leading dot', max_length=32, verbose_name='extension')),
                ('size', models.PositiveIntegerField(default=0, editable=False, verbose_name='size')),
                ('checksum', models.CharField(editable=False, max_length=64, verbose_name='checksum')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='uploaded at')),
                ('title', models.CharField(blank=True, help_text='The title is being used as a tooltip when the user hovers the mouse over the image', max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='This text will be used by screen readers, search engines, or when the image cannot be loaded', verbose_name='description')),
                ('width', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='width')),
                ('height', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='height')),
                ('cropregion', models.CharField(blank=True, editable=False, max_length=24, verbose_name='crop region')),
                ('file', paper_uploads.models.fields.base.DynamicStorageFileField(verbose_name='file')),
            ],
            options={
                'abstract': False,
                'default_permissions': (),
            },
            bases=(paper_uploads.models.mixins.FileFieldProxyMixin, paper_uploads.models.mixins.FileProxyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CloudinaryImageExample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', paper_uploads.cloudinary.models.fields.image.CloudinaryImageField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads_cloudinary.cloudinaryimage', upload_to='', verbose_name='image')),
                ('image_public', paper_uploads.cloudinary.models.fields.image.CloudinaryImageField(blank=True, on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads_cloudinary.cloudinaryimage', upload_to='', verbose_name='Public image')),
            ],
            options={
                'verbose_name': 'Cloudinary Image',
                'verbose_name_plural': 'Cloudinary Images',
            },
        ),
        migrations.CreateModel(
            name='CustomProxyUploadedFile',
            fields=[
            ],
            options={
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('paper_uploads.uploadedfile',),
        ),
        migrations.CreateModel(
            name='FileFieldObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=128, verbose_name='name')),
            ],
            options={
                'verbose_name': 'File',
                'verbose_name_plural': 'Files',
            },
        ),
        migrations.CreateModel(
            name='CustomProxyUploadedImage',
            fields=[
            ],
            options={
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('paper_uploads.uploadedimage',),
        ),
        migrations.CreateModel(
            name='CustomGallery',
            fields=[
            ],
            options={
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CollectionFieldObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=128, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Collection',
                'verbose_name_plural': 'Collections',
            },
        ),
        migrations.CreateModel(
            name='CustomCloudinaryFile',
            fields=[
            ],
            options={
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('paper_uploads_cloudinary.cloudinaryfile',),
        ),
        migrations.CreateModel(
            name='ImageFieldObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=128, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='CloudinaryFileExample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', paper_uploads.cloudinary.models.fields.file.CloudinaryFileField(blank=True, on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads_cloudinary.cloudinaryfile', upload_to='', verbose_name='file')),
                ('file_extensions', paper_uploads.cloudinary.models.fields.file.CloudinaryFileField(blank=True, help_text='Only `pdf`, `txt` and `doc` allowed', on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads_cloudinary.cloudinaryfile', upload_to='', validators=[paper_uploads.validators.ExtensionValidator(['.pdf', '.txt', '.doc'])], verbose_name='Extension')),
                ('file_mimetypes', paper_uploads.cloudinary.models.fields.file.CloudinaryFileField(blank=True, help_text='Only `image/svg+xml` and `image/gif` allowed', on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads_cloudinary.cloudinaryfile', upload_to='', validators=[paper_uploads.validators.MimeTypeValidator(['image/svg+xml', 'image/gif'])], verbose_name='MimeType')),
                ('file_required', paper_uploads.cloudinary.models.fields.file.CloudinaryFileField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads_cloudinary.cloudinaryfile', upload_to='', verbose_name='required file')),
                ('file_size', paper_uploads.cloudinary.models.fields.file.CloudinaryFileField(blank=True, help_text='Maximum file size is 16Kb', on_delete=django.db.models.deletion.SET_NULL, storage=None, to='paper_uploads_cloudinary.cloudinaryfile', upload_to='', validators=[paper_uploads.validators.MaxSizeValidator('16kb')], verbose_name='Size')),
                ('name', models.CharField(default='', max_length=128, verbose_name='name')),
                ('file_custom', paper_uploads.cloudinary.models.fields.file.CloudinaryFileField(blank=True, on_delete=django.db.models.deletion.SET_NULL, storage=None, to='app.customcloudinaryfile', upload_to='', verbose_name='custom file')),
            ],
            options={
                'verbose_name': 'Cloudinary File',
                'verbose_name_plural': 'Cloudinary Files',
            },
        ),
        migrations.CreateModel(
            name='CustomImageItem',
            fields=[
            ],
            options={
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('paper_uploads.imageitem',),
        ),
        migrations.DeleteModel(
            name='CustomImageItem',
        ),
        migrations.CreateModel(
            name='CustomProxyImageItem',
            fields=[
            ],
            options={
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('paper_uploads.imageitem',),
        ),
        migrations.CreateModel(
            name='CustomProxyGallery',
            fields=[
            ],
            options={
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('paper_uploads.imagecollection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomCloudinaryGallery',
            fields=[
            ],
            options={
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
                'constraints': [],
            },
            bases=('paper_uploads_cloudinary.cloudinaryimagecollection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='cloudinarycollectionfieldobject',
            name='custom_collection',
            field=paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, storage=None, to='app.customcloudinarygallery', upload_to=''),
        ),
        migrations.CreateModel(
            name='DummyBacklinkResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_app_label', models.CharField(editable=False, max_length=100)),
                ('owner_model_name', models.CharField(editable=False, max_length=100)),
                ('owner_fieldname', models.CharField(editable=False, max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomCloudinaryImageItem',
            fields=[
                ('collectionitembase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='paper_uploads.collectionitembase')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('basename', models.CharField(editable=False, help_text='Human-readable resource name', max_length=255, verbose_name='basename')),
                ('extension', models.CharField(editable=False, help_text='Lowercase, without leading dot', max_length=32, verbose_name='extension')),
                ('size', models.PositiveIntegerField(default=0, editable=False, verbose_name='size')),
                ('checksum', models.CharField(editable=False, max_length=64, verbose_name='checksum')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='uploaded at')),
                ('title', models.CharField(blank=True, help_text='The title is being used as a tooltip when the user hovers the mouse over the image', max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='This text will be used by screen readers, search engines, or when the image cannot be loaded', verbose_name='description')),
                ('width', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='width')),
                ('height', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='height')),
                ('cropregion', models.CharField(blank=True, editable=False, max_length=24, verbose_name='crop region')),
                ('file', cloudinary.models.CloudinaryField(max_length=255, verbose_name='file')),
                ('caption', models.TextField(blank=True, verbose_name='caption')),
            ],
            options={
                'default_permissions': (),
            },
            bases=('paper_uploads.collectionitembase', paper_uploads.cloudinary.models.mixins.ReadonlyCloudinaryFileProxyMixin, paper_uploads.models.mixins.FileProxyMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CustomImageItem',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='changed at')),
                ('basename', models.CharField(editable=False, help_text='Human-readable resource name', max_length=255, verbose_name='basename')),
                ('extension', models.CharField(editable=False, help_text='Lowercase, without leading dot', max_length=32, verbose_name='extension')),
                ('size', models.PositiveIntegerField(default=0, editable=False, verbose_name='size')),
                ('checksum', models.CharField(editable=False, max_length=64, verbose_name='checksum')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='uploaded at')),
                ('title', models.CharField(blank=True, help_text='The title is being used as a tooltip when the user hovers the mouse over the image', max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='This text will be used by screen readers, search engines, or when the image cannot be loaded', verbose_name='description')),
                ('width', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='width')),
                ('height', models.PositiveSmallIntegerField(default=0, editable=False, verbose_name='height')),
                ('cropregion', models.CharField(blank=True, editable=False, max_length=24, verbose_name='crop region')),
                ('file', paper_uploads.models.fields.image.VariationalFileField(verbose_name='file')),
                ('caption', models.TextField(blank=True, verbose_name='caption')),
            ],
            options={
                'default_permissions': (),
            },
            bases=('paper_uploads.collectionitembase', paper_uploads.models.mixins.FileFieldProxyMixin, paper_uploads.models.mixins.FileProxyMixin, models.Model),
        ),
        migrations.DeleteModel(
            name='CustomProxyUploadedFile',
        ),
        migrations.DeleteModel(
            name='CustomProxyUploadedImage',
        ),
        migrations.DeleteModel(
            name='FileFieldObject',
        ),
        migrations.DeleteModel(
            name='ImageFieldObject',
        ),
        migrations.DeleteModel(
            name='ChildFileCollection',
        ),
        migrations.DeleteModel(
            name='FileCollection',
        ),
        migrations.DeleteModel(
            name='PhotoCollection',
        ),
        migrations.DeleteModel(
            name='CollectionFieldObject',
        ),
        migrations.DeleteModel(
            name='IsolatedFileCollection',
        ),
        migrations.DeleteModel(
            name='CompleteCollection',
        ),
        migrations.DeleteModel(
            name='CustomGallery',
        ),
        migrations.DeleteModel(
            name='CustomProxyGallery',
        ),
        migrations.DeleteModel(
            name='CustomProxyImageItem',
        ),
        migrations.DeleteModel(
            name='CustomImageItem',
        ),
    ]
