# Generated by Django 3.0.9 on 2020-09-15 07:08

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import paper_uploads.cloudinary.models.fields.file
import paper_uploads.cloudinary.models.fields.image
import paper_uploads.cloudinary.models.fields.media
import paper_uploads.models.fields.collection
import paper_uploads.models.fields.file
import paper_uploads.models.fields.image
import paper_uploads.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app', '0001_initial'),
        ('paper_uploads', '0001_initial'),
        ('paper_uploads_cloudinary', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='IsolatedFileCollection',
            fields=[
                ('collection_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='paper_uploads.Collection')),
            ],
            options={
                'proxy': False,
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CloudinaryCompleteCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CloudinaryFileCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CloudinaryMediaCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CloudinaryPhotoCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('paper_uploads_cloudinary.cloudinaryimagecollection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='CompleteCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='FileCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('paper_uploads.collection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PhotoCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('paper_uploads.imagecollection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='imagefieldobject',
            name='image',
            field=paper_uploads.models.fields.image.ImageField(blank=True, on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedImage', verbose_name='image'),
        ),
        migrations.AddField(
            model_name='imagefieldobject',
            name='image_extensions',
            field=paper_uploads.models.fields.image.ImageField(blank=True, help_text='Only `png` and `gif` allowed', on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedImage', validators=[paper_uploads.validators.ExtensionValidator(['.png', '.gif'])], verbose_name='Extension'),
        ),
        migrations.AddField(
            model_name='imagefieldobject',
            name='image_max_size',
            field=paper_uploads.models.fields.image.ImageField(blank=True, help_text='Image should be at most 1024x768 pixels', on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedImage', validators=[paper_uploads.validators.ImageMaxSizeValidator(1024, 768)], verbose_name='Max size'),
        ),
        migrations.AddField(
            model_name='imagefieldobject',
            name='image_mimetypes',
            field=paper_uploads.models.fields.image.ImageField(blank=True, help_text='Only `image/png` and `image/jpeg` allowed', on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedImage', validators=[paper_uploads.validators.MimeTypeValidator(['image/png', 'image/jpeg'])], verbose_name='MimeType'),
        ),
        migrations.AddField(
            model_name='imagefieldobject',
            name='image_min_size',
            field=paper_uploads.models.fields.image.ImageField(blank=True, help_text='Image should be at least 640x480 pixels', on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedImage', validators=[paper_uploads.validators.ImageMinSizeValidator(640, 480)], verbose_name='Min size'),
        ),
        migrations.AddField(
            model_name='imagefieldobject',
            name='image_required',
            field=paper_uploads.models.fields.image.ImageField(on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedImage', verbose_name='required image'),
        ),
        migrations.AddField(
            model_name='imagefieldobject',
            name='image_size',
            field=paper_uploads.models.fields.image.ImageField(blank=True, help_text='Maximum file size is 64Kb', on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedImage', validators=[paper_uploads.validators.SizeValidator('64kb')], verbose_name='Size'),
        ),
        migrations.AddField(
            model_name='imageexample',
            name='image',
            field=paper_uploads.models.fields.image.ImageField(on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedImage', verbose_name='image'),
        ),
        migrations.AddField(
            model_name='filefieldobject',
            name='file',
            field=paper_uploads.models.fields.file.FileField(blank=True, on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedFile', verbose_name='file'),
        ),
        migrations.AddField(
            model_name='filefieldobject',
            name='file_extensions',
            field=paper_uploads.models.fields.file.FileField(blank=True, help_text='Only `pdf`, `txt` and `doc` allowed', on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedFile', validators=[paper_uploads.validators.ExtensionValidator(['.pdf', '.txt', '.doc'])], verbose_name='Extension'),
        ),
        migrations.AddField(
            model_name='filefieldobject',
            name='file_mimetypes',
            field=paper_uploads.models.fields.file.FileField(blank=True, help_text='Only `image/svg` and `image/gif` allowed', on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedFile', validators=[paper_uploads.validators.MimeTypeValidator(['image/svg', 'image/gif'])], verbose_name='MimeType'),
        ),
        migrations.AddField(
            model_name='filefieldobject',
            name='file_required',
            field=paper_uploads.models.fields.file.FileField(on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedFile', verbose_name='required file'),
        ),
        migrations.AddField(
            model_name='filefieldobject',
            name='file_size',
            field=paper_uploads.models.fields.file.FileField(blank=True, help_text='Maximum file size is 16Kb', on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedFile', validators=[paper_uploads.validators.SizeValidator('16kb')], verbose_name='Size'),
        ),
        migrations.AddField(
            model_name='fileexample',
            name='file',
            field=paper_uploads.models.fields.file.FileField(on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads.UploadedFile', verbose_name='file'),
        ),
        migrations.AddField(
            model_name='collectionfieldobject',
            name='file_collection',
            field=paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, to='app.FileCollection'),
        ),
        migrations.AddField(
            model_name='collectionfieldobject',
            name='full_collection',
            field=paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, to='app.CompleteCollection'),
        ),
        migrations.AddField(
            model_name='collectionfieldobject',
            name='image_collection',
            field=paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, to='app.PhotoCollection'),
        ),
        migrations.AddField(
            model_name='cloudinarymediaexample',
            name='media',
            field=paper_uploads.cloudinary.models.fields.media.CloudinaryMediaField(on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads_cloudinary.CloudinaryMedia', verbose_name='media'),
        ),
        migrations.AddField(
            model_name='cloudinaryimageexample',
            name='image',
            field=paper_uploads.cloudinary.models.fields.image.CloudinaryImageField(on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads_cloudinary.CloudinaryImage', verbose_name='image'),
        ),
        migrations.AddField(
            model_name='cloudinaryfileexample',
            name='file',
            field=paper_uploads.cloudinary.models.fields.file.CloudinaryFileField(on_delete=django.db.models.deletion.SET_NULL, to='paper_uploads_cloudinary.CloudinaryFile', verbose_name='file'),
        ),
        migrations.AddField(
            model_name='cloudinarycollectionfieldobject',
            name='file_collection',
            field=paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, to='app.CloudinaryFileCollection'),
        ),
        migrations.AddField(
            model_name='cloudinarycollectionfieldobject',
            name='full_collection',
            field=paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, to='app.cloudinarycompletecollection'),
        ),
        migrations.AddField(
            model_name='cloudinarycollectionfieldobject',
            name='image_collection',
            field=paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, to='app.CloudinaryPhotoCollection'),
        ),
        migrations.AddField(
            model_name='cloudinarycollectionfieldobject',
            name='media_collection',
            field=paper_uploads.models.fields.collection.CollectionField(on_delete=django.db.models.deletion.SET_NULL, to='app.CloudinaryMediaCollection'),
        ),
        migrations.CreateModel(
            name='ChildFileCollection',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('app.isolatedfilecollection',),
            managers=[
                ('default_mgr', django.db.models.manager.Manager()),
            ],
        ),
    ]
